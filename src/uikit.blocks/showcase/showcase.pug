include ~FRAMEWORK/icon/icon
include ~FRAMEWORK/button/button
include ~FRAMEWORK/flex-grid/flex-grid

mixin showcase(options = {})
	-
		let type = options.type

	.showcase(class=`showcase_${type}`)
		case type

			when 'font'
				-
					const font = {
						title: options.data.title,
						className: options.data.className ? options.data.className : '',
						props: options.data.props ? options.data.props : []
					}

				+flex-grid({columns: 2, className: 'showcase__container'})
					
					+__item()
						div(class=font.className)=font.title
								
					+__item({desc: true})
						each prop in font.props
							div= prop

			when 'color'

				-	
					const color = {
						title: options.data.title,
						code: options.data.code,
						className: options.data.className
					}

				+flex-grid({columns: 3, className: 'showcase__container'})

					+__item( {flex: {width: 1} } )
						.showcase__color(class=color.className)
					+__item({desc: true, flex: {width: 2}})=color.code
					+__item({desc: true, flex: {width: 3}})=color.title

			when 'button'

				-
					const button = {
						title: options.data.title,
						button: options.data.button
					}

				+flex-grid({columns: 2, vAlign: 'center', className: 'showcase__container'})
					+__item()
						+button(button.button)
					+__item({desc: true})=button.title

			when 'icon'

				-
					const icon = {
						icon: options.data.icon,
						count: options.data.count ? options.data.count : 3
					}

				+flex-grid({columns: 6, vAlign: 'center', hAlign: 'center', className: 'showcase__container'})
					+__item()
						+icon({icon: icon.icon})

					if icon.count > 1
						+__item()
							+icon({icon: icon.icon, isHover: true})
					else 
						+__item({desc: true}) нет

					if icon.count > 2
						+__item()
							+icon({icon: icon.icon, isActive: true})
					else
						+__item({desc: true}) нет
								
					+__item()
					+__item({desc: true, flex: {width: 2, hAlignIgnore: true}})=icon.icon

			when 'icon-adv'
				-
					const iconAdv = {
						title: options.data.title,
						icon: options.data.icon
					}

				+flex-grid({columns: 6, vAlign: 'center', hAlign: 'center', className: 'showcase__container'})
					+__item()
						.showcase__icon-holder.grey-light-bg
							+icon({icon: iconAdv.icon, isHover: true})
					+__item()
						.showcase__icon-holder.grey-light-bg
							+icon({icon: iconAdv.icon, isActive: true})
					+__item()
						.showcase__icon-holder.grey-light-bg
							+icon({icon: iconAdv.icon})

					+__item()
					+__item({desc: true, flex: {width: 2, hAlignIgnore: true}})=iconAdv.title

			default
				+flex-grid()
					+__item({desc: true}) Incorrect type


mixin __item(options={})
	-
		baseClass = 'showcase__item'
		let classes = baseClass+(options.className ? ' '+options.className : '')
		classes += options.desc ? ` ${baseClass}_description` : ''

		let flex = false

		if(options.flex) {
			flex = true
			options.flex.className = classes
		}

	if flex
		+flex-grid__item(options.flex)
			block
	else
		div(class=classes)
			block